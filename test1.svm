struct Vector3{
	float x;
	float y;
	float z;
};

struct VectorTri{
	Vector3 pos;
	int scale;
};

int Summation(int n){
	int total = 0;
	int counter = 1;
	while(counter < n+1){
		total = total + counter;
		counter = counter + 1;
	}
	
	return total;
}

int Factorial(int x){
	if(x < 2){
		return 1;
	}
	
	return x * Factorial(x-1);
}


float Madd(float a, float b, float c){
	return a*b + a*c;
}


float MagnitudeSqr(Vector3 vec){
	return vec.x * vec.x + vec.y*vec.y + vec.z*vec.z;
}

int PrintVector(Vector3 vec){
	PRINTF(vec.x);
	PRINTF(vec.y);
	PRINTF(vec.z);
	
	return 0;
}

int PrintTri(VectorTri tri){
	PRINT(tri.scale);
	return PrintVector(tri.pos);
}

int main(){
	VectorTri tri;
	tri.pos.x = 1.2;
	tri.pos.y = 23.1;
	tri.pos.z = 2.6;
	tri.scale = 19;
	
	int retVal = PrintTri(tri);
	
	PRINTF(1.203);
	
	return 0;
}



int mainTwo(){
	Vector3 vec;
	vec.x = 3.0;
	vec.y = 4.0;
	vec.z = 12.0;
	PRINTF(vec.x * vec.x + vec.y * vec.y + vec.z * vec.z);
	
	float input = 1.0;
	while(input > 0.0){
		input = READF();
		PRINTF(input/2.11);
	}
	
	int inputNext = 12;
	while(inputNext > 0){
		inputNext = READ();
		PRINT(Summation(inputNext));
		PRINT(Factorial(inputNext));
	}
	
	int lav = 10;
	while(lav == 10){
		lav = READ();
	}
	
	return 0;
	
	int i = 1;
	while(i < 50){
		int j = 1;
		while(j < 50){
			PRINT((i*j));
			j = j + 1;
		}
		i = i + 1;
	}
	
	return 0;
}

